{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","isEditing","id","Math","random","name","Todo","todo","editHandler","map","item","editingList","defaultValue","viewingList","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef94a0cf.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus }) => {\n\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value)\n    }\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault()\n        if (inputText){\n        setTodos([\n          ...todos,\n          {text:inputText, completed:false, isEditing:false, id: Math.random()*1000}\n        ])\n        setInputText(\"\")\n      }\n    }\n\n    const statusHandler = (e) => {\n      setStatus(e.target.value)\n      }\n\n    return (\n    <form>\n    <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n    <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n      <i className=\"fas fa-plus-square\"></i>\n    </button>\n    <div className=\"select\">\n      <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n        <option value=\"all\">All</option>\n        <option value=\"completed\">Completed</option>\n        <option value=\"uncompleted\">Uncompleted</option>\n      </select>\n    </div>\n  </form>\n    )\n}\n\nexport default Form;","import React from 'react';\n\nconst Todo = ({todo, text, todos, setTodos}) => {\n\n    const deleteHandler = () => {\n        setTodos(todos.filter(el => el.id !== todo.id))\n    }\n\n    const completeHandler = () => {\n        setTodos(todos.map((item) => {\n            if(item.id === todo.id){\n                return ({\n                    ...item, completed:!item.completed\n                })\n            }\n            return item\n        } \n        ))\n    }\n\n    const editHandler = () => {\n        setTodos(todos.map((item) => {\n            if(item.id === todo.id){\n                return ({\n                    ...item, isEditing:!item.isEditing\n                })\n            }\n            return item\n        } \n        ))\n    }\n\n    const editChangeHandler = (e) => {\n        setTodos(todos.map((item) => {\n            if(item.id === todo.id){\n                return ({\n                    ...item, text: e.target.value\n                })\n            }\n            return item\n        }))\n    }\n\n    const editingList = (\n        <>\n        <input defaultValue={text} onChange={editChangeHandler} type=\"text\" className=\"todo-input\" />\n        <button onClick={editHandler} className='edit-btn'>\n            <i className=\"fas fa-save\"></i>\n        </button>\n\n        </>\n    )\n\n    const viewingList = (\n        <>\n        <li className = {`todo-item ${todo.completed ? 'completed' : ''}`}> {text} </li>\n        <button onClick={completeHandler} className='complete-btn'> \n                <i className='fas fa-check'> </i>\n        </button>\n        <button onClick={editHandler} className='edit-btn'>\n            <i className=\"fas fa-edit\"></i>\n        </button>\n        </>\n    )\n\n    return(\n        <div className='todo'>\n            {todo.isEditing ? editingList : viewingList}\n            \n            <button onClick={deleteHandler} className='trash-btn'> \n                <i className='fas fa-trash'> </i>\n            </button>\n            \n        </div>\n\n    )\n\n}\n\nexport default Todo;","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList =( { todos, setTodos, filteredTodos} )=>{\n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {\n                filteredTodos.map((todo) => \n                <Todo todos={todos} \n                setTodos={setTodos} \n                key={todo.id} \n                todo={todo} \n                text={todo.text}/>)\n                \n    }\n                \n            </ul>\n        </div>\n    )\n}\n\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList'\n\nfunction App() {\n\n  const [inputText, setInputText] = useState('')\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState(\"all\")\n  const [filteredTodos, setFilteredTodos] = useState([])\n\n  \n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(\n          todos.filter(todo => todo.completed === true)\n        )\n      break\n      case 'uncompleted':\n        setFilteredTodos(\n          todos.filter(todo => todo.completed === false)\n        )\n      break\n      default:\n        setFilteredTodos(todos)\n      break\n  } \n}\nuseEffect(() => {\n  getLocalTodos()\n},[])\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos()\n  },[ todos, status ])\n\n  const saveLocalTodos = () =>{\n    \n      localStorage.setItem('todos',JSON.stringify(todos))\n\n  }\n\n  const getLocalTodos = () =>{\n    if (localStorage.getItem('todos') === null){\n      localStorage.setItem('todos',JSON.stringify([]))\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem('todos'))\n      setTodos(todoLocal)\n    }\n  }\n\n  return ( \n    <div className=\"App\">\n      <header>\n        <h1>A Todo list App </h1>\n        \n      </header>\n      <h3>By Yusuf Abdulmueez</h3>\n      <Form \n      inputText={inputText} \n      setInputText={setInputText} \n      todos={todos} \n      setTodos={setTodos} \n      setStatus={setStatus} />\n      <TodoList \n      todos={todos} \n      setTodos={setTodos} \n      filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}